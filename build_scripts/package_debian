#!/bin/bash

modules="network"

if [ -z $1 ]; then \
    printf "Usage: package_debian <PackageName> <PackageMajor> <PackageMinor> <PackageRevision>"; \
    printf "\n\tMissing: PackageName\n"; \
    exit -1; \
fi
if [ -z $2 ]; then \
    printf "Usage: package_debian <PackageName> <PackageMajor> <PackageMinor> <PackageRevision>"; \
    printf "\n\tMissing: PackageMajor\n"; \
    exit -1; \
fi
if [ -z $3 ]; then \
    printf "Usage: package_debian <PackageName> <PackageMajor> <PackageMinor> <PackageRevision>"; \
    printf "\n\tMissing: PackageMinor\n"; \
    exit -1; \
fi
if [ -z $4 ]; then \
    printf "Usage: package_debian <PackageName> <PackageMajor> <PackageMinor> <PackageRevision>"; \
    printf "\n\tMissing: PackageRevision\n"; \
    exit -1; \
fi

exec > /dev/null

packageName="$1"; packageMajor="$2"; packageMinor="$3"; packageRevision="$4"

packageFull="${packageName}_${packageMajor}.${packageMinor}-${packageRevision}"

# echo $packageFull

function packageDeb(){
    rm -rf ./build/lib ./build/objects ./build/tests

    make BuildLib modules=$modules

    mkdir $packageFull

    mkdir -p $packageFull/lib
    mkdir -p $packageFull/usr/lib
    mkdir -p $packageFull/usr/local/lib



    cp -f ./build/lib/$packageName.so $packageFull/lib
    cp -f ./build/lib/$packageName.so $packageFull/usr/local/lib
    cp -rf ./include $packageFull/usr/include/
    cp -rf ./include $packageFull/usr/local/include/


    mkdir $packageFull/DEBIAN

    echo "Package: ${packageName}
    Version: ${packageMajor}.${packageMinor}-${packageRevision}
    Section: base
    Priority: optional
    Architecture: all
    Maintainer: Moss Mayfly <mossmayfly@gmail.com>
    Description: Miss-Moss Library
     Currently a library that I hope to expand into something greater.
     For now it is a dependecny free, C++ style TCP library." > $packageFull/DEBIAN/control

    dpkg-deb --build --root-owner-group $packageFull

    rm -rf $packageFull
}